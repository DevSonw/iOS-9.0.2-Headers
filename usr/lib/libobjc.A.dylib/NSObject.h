/*
* This header is generated by classdump-dyld 1.0
* on Friday, March 18, 2016 at 1:49:52 AM Central Daylight Time
* Operating System: Version 9.0.2 (Build 13A452)
* Image Source: /usr/lib/libobjc.A.dylib
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/libobjc.A.dylib-Structs.h>
#import <libobjc.A.dylib/PQLResultSetInitializer.h>
#import <libobjc.A.dylib/NSObject.h>
@class NSString;


@protocol NSObject
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@optional
-(NSString *)debugDescription;

@required
-(Class)class;
-(BOOL)respondsToSelector:(SEL)arg1;
-(BOOL)isKindOfClass:(Class)arg1;
-(BOOL)isEqual:(id)arg1;
-(id)self;
-(id)performSelector:(SEL)arg1;
-(id)performSelector:(SEL)arg1 withObject:(id)arg2;
-(id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
-(BOOL)isProxy;
-(BOOL)isMemberOfClass:(Class)arg1;
-(BOOL)conformsToProtocol:(id)arg1;
-(id)retain;
-(oneway void)release;
-(id)autorelease;
-(unsigned long long)retainCount;
-(NSZone*)zone;
-(unsigned long long)hash;
-(Class)superclass;
-(NSString *)description;

@end


@class NSString, NSArray, UIBezierPath, _UITraitStorageList;

@interface NSObject <PQLResultSetInitializer, NSObject> {

	Class isa;

}

@property (nonatomic,retain,readonly) NSString * logID; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy) NSString * accessibilityIdentifier; 
@property (nonatomic,retain) NSArray * accessibilityElements; 
@property (nonatomic,retain) NSArray * accessibilityCustomActions; 
@property (assign,nonatomic) BOOL isAccessibilityElement; 
@property (nonatomic,copy) NSString * accessibilityLabel; 
@property (nonatomic,copy) NSString * accessibilityHint; 
@property (nonatomic,copy) NSString * accessibilityValue; 
@property (assign,nonatomic) unsigned long long accessibilityTraits; 
@property (assign,nonatomic) CGRect accessibilityFrame; 
@property (nonatomic,copy) UIBezierPath * accessibilityPath; 
@property (assign,nonatomic) CGPoint accessibilityActivationPoint; 
@property (nonatomic,retain) NSString * accessibilityLanguage; 
@property (assign,nonatomic) BOOL accessibilityElementsHidden; 
@property (assign,nonatomic) BOOL accessibilityViewIsModal; 
@property (assign,nonatomic) BOOL shouldGroupAccessibilityChildren; 
@property (assign,nonatomic) long long accessibilityNavigationStyle; 
@property (nonatomic,copy) NSArray * accessibilityHeaderElements; 
@property (setter=_setTraitStorageList:,getter=_traitStorageList,retain) _UITraitStorageList * traitStorageList; 
@property (retain,readonly) id autoContentAccessingProxy; 
@property (readonly) Class classForKeyedArchiver; 
@property (assign) void* observationInfo; 
+(BOOL)tsu_overridesSelector:(SEL)arg1 ofBaseClass:(Class)arg2 ;
+(BOOL)tsu_overridesClassSelector:(SEL)arg1 ofBaseClass:(Class)arg2 ;
+(BOOL)tsu_object:(id)arg1 isEqualToObject:(id)arg2 ;
+(BOOL)ICLogging_isLoggingEnabledAtLevel:(int)arg1 ;
+(void)_accessibilityConvertDecimalDegreeToDMS:(double)arg1 degreesPtr:(long long*)arg2 minutesPtr:(long long*)arg3 secondsPtr:(double*)arg4 ;
+(id)_gkDefaultKeymap;
+(BOOL)brc_swizzleInstanceMethod:(SEL)arg1 with:(SEL)arg2 ;
+(BOOL)brc_swizzleClassMethod:(SEL)arg1 with:(SEL)arg2 ;
+(void)_accessibilityCalDetailStringForEvent:(id)arg1 inLine1:(id*)arg2 inLine2:(id*)arg3 inLine3:(id*)arg4 inLine4:(id*)arg5 ;
+(void)_accessibilityCalGetHourDesignatorsForAM:(id*)arg1 andPM:(id*)arg2 ;
+(BOOL)_accessibilityCalSpaceBetweenDesignatorsAndHour;
+(BOOL)_accessibilityCalHourDesignatorsAreBeforeHour;
+(BOOL)_accessibilityCalShow24Hours;
+(id)_accessibilityStringForDayOfWeek:(int)arg1 ;
+(id)_accessibilityStringForDate:(SCD_Struct_NS1)arg1 ;
+(Class)safeCategoryBaseClass;
+(id)cplAdditionalSecureClassesForProperty:(id)arg1 ;
+(BOOL)cplShouldIgnorePropertyForCoding:(id)arg1 ;
+(BOOL)cplShouldIgnorePropertyForEquality:(id)arg1 ;
+(void)_addPropertyAttributeMapToPropertyMapLocked:(id)arg1 ;
+(id)_cplPropertyAttributeMap;
+(void)cplDumpProperties;
+(id)cplAllPropertyNames;
+(Class)classForStoredClassName:(id)arg1 forCPLArchiver:(id)arg2 ;
+(void)performSelectorWithNonRetainedTarget:(id)arg1 selector:(SEL)arg2 withObject:(id)arg3 afterDelay:(double)arg4 ;
+(void)cancelPreviousPerformRequestsWithNonRetainedTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3 ;
+(void)cancelPreviousPerformRequestsWithNonRetainedTarget:(id)arg1 ;
+(void)mf_clearLocks;
+(id)FMLoggerFacility;
+(BOOL)_accessibilityHasUnitTestingOrientation;
+(long long)_accessibilityUnitTestingOrientation;
+(id)_accessibilityTextChecker;
+(void)_accessibilitySetUnitTestingOrientation:(long long)arg1 ;
+(void)_accessibilityUnsetUnitTestingOrientation;
+(id)accessibilityBundles;
+(void)accessibilityInitializeBundle;
+(void)_installAppearanceSwizzlesForSetter:(id)arg1 ;
+(BOOL)__accessibilityGuidedAccessStateEnabled;
+(long long)__accessibilityGuidedAccessRestrictionStateForIdentifier:(id)arg1 ;
+(void)__accessibilityRequestGuidedAccessSession:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
+(id)_alternateUISwitchableSelectorPairs;
+(BOOL)isKeyExcludedFromWebScript:(const char*)arg1 ;
+(BOOL)isSelectorExcludedFromWebScript:(SEL)arg1 ;
+(id)_webkit_invokeOnMainThread;
+(void)_accessibilityPerformValidations:(id)arg1 ;
+(double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned)arg4 count:(unsigned)arg5 objects:(id)arg6 ;
+(double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned)arg3 objects:(id)arg4 ;
+(id)sbs_dataFromObject:(id)arg1 ;
+(id)sbs_objectFromData:(id)arg1 ;
+(id)sbs_dataWithValue:(id)arg1 ;
+(id)sbs_valueFromData:(id)arg1 ofType:(const char*)arg2 ;
+(BOOL)CA_automaticallyNotifiesObservers:(Class)arg1 ;
+(BOOL)CA_encodesPropertyConditionally:(unsigned)arg1 type:(int)arg2 ;
+(/*function pointer*/void*)CA_setterForProperty:(const CAPropertyInfo*)arg1 ;
+(/*function pointer*/void*)CA_getterForProperty:(const CAPropertyInfo*)arg1 ;
+(id)CA_CAMLPropertyForKey:(id)arg1 ;
+(id)bs_decodedFromData:(id)arg1 ;
+(id)bs_secureDecodedFromData:(id)arg1 ;
+(id)bs_secureDecodedFromData:(id)arg1 withAdditionalClasses:(id)arg2 ;
+(id)bs_dataFromObject:(id)arg1 ;
+(id)bs_secureDataFromObject:(id)arg1 ;
+(id)bs_objectFromData:(id)arg1 ;
+(id)bs_secureObjectFromData:(id)arg1 ofClass:(Class)arg2 ;
+(id)bs_secureObjectFromData:(id)arg1 ofClasses:(id)arg2 ;
+(BOOL)bs_synchronousWrapper:(/*^block*/id)arg1 timeout:(double)arg2 ;
+(id)replacementObjectForPortCoder:(id)arg1 ;
+(void)cancelPreviousPerformRequestsWithTarget:(id)arg1 selector:(SEL)arg2 object:(id)arg3 ;
+(void)cancelPreviousPerformRequestsWithTarget:(id)arg1 ;
+(BOOL)implementsSelector:(SEL)arg1 ;
+(BOOL)instancesImplementSelector:(SEL)arg1 ;
+(void)load;
+(void)setVersion:(long long)arg1 ;
+(long long)version;
+(Class)classForKeyedUnarchiver;
+(id)classFallbacksForKeyedArchiver;
+(BOOL)_shouldAddObservationForwardersForKey:(id)arg1 ;
+(void)setKeys:(id)arg1 triggerChangeNotificationsForDependentKey:(id)arg2 ;
+(id)_keysForValuesAffectingValueForKey:(id)arg1 ;
+(BOOL)automaticallyNotifiesObserversForKey:(id)arg1 ;
+(id)keyPathsForValuesAffectingValueForKey:(id)arg1 ;
+(id)_createValueGetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createValueSetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createMutableOrderedSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createMutableSetValueGetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createValuePrimitiveGetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createValuePrimitiveSetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createOtherValueGetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createOtherValueSetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(id)_createMutableArrayValueGetterWithContainerClassID:(id)arg1 key:(id)arg2 ;
+(BOOL)accessInstanceVariablesDirectly;
+(id)__allocWithZone_OA:(NSZone*)arg1 ;
+(id)_copyDescription;
+(void)dealloc;
+(id)init;
+(id)description;
+(id)methodSignatureForSelector:(SEL)arg1 ;
+(id)instanceMethodSignatureForSelector:(SEL)arg1 ;
+(void)doesNotRecognizeSelector:(SEL)arg1 ;
+(void)load;
+(void)finalize;
+(BOOL)resolveClassMethod:(SEL)arg1 ;
+(BOOL)resolveInstanceMethod:(SEL)arg1 ;
+(BOOL)isAncestorOfObject:(id)arg1 ;
+(BOOL)isFault;
+(Class)class;
+(id)alloc;
+(void)dealloc;
+(BOOL)respondsToSelector:(SEL)arg1 ;
+(id)init;
+(BOOL)isKindOfClass:(Class)arg1 ;
+(id)new;
+(BOOL)isEqual:(id)arg1 ;
+(id)self;
+(id)performSelector:(SEL)arg1 ;
+(id)performSelector:(SEL)arg1 withObject:(id)arg2 ;
+(id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 ;
+(BOOL)isProxy;
+(BOOL)isMemberOfClass:(Class)arg1 ;
+(BOOL)conformsToProtocol:(id)arg1 ;
+(id)retain;
+(oneway void)release;
+(id)autorelease;
+(unsigned long long)retainCount;
+(NSZone*)zone;
+(unsigned long long)hash;
+(Class)superclass;
+(id)description;
+(id)debugDescription;
+(id)copy;
+(/*function pointer*/void*)methodForSelector:(SEL)arg1 ;
+(id)methodSignatureForSelector:(SEL)arg1 ;
+(BOOL)isSubclassOfClass:(Class)arg1 ;
+(id)mutableCopy;
+(id)instanceMethodSignatureForSelector:(SEL)arg1 ;
+(id)allocWithZone:(NSZone*)arg1 ;
+(id)copyWithZone:(NSZone*)arg1 ;
+(/*function pointer*/void*)instanceMethodForSelector:(SEL)arg1 ;
+(void)initialize;
+(void)doesNotRecognizeSelector:(SEL)arg1 ;
+(BOOL)_isDeallocating;
+(BOOL)allowsWeakReference;
+(BOOL)instancesRespondToSelector:(SEL)arg1 ;
+(id)forwardingTargetForSelector:(SEL)arg1 ;
+(void)forwardInvocation:(id)arg1 ;
+(BOOL)retainWeakReference;
+(id)mutableCopyWithZone:(NSZone*)arg1 ;
+(void)load;
+(BOOL)_tryRetain;
+(void)finalize;
-(BOOL)un_safeBoolValue;
-(void)spui_updateDictionaryForKey:(id)arg1 withChanges:(id)arg2 ;
-(void)spui_updateTextAttributesForKey:(id)arg1 ;
-(id)hashString;
-(void)performBlock:(/*^block*/id)arg1 usingQueue:(id)arg2 ;
-(void)performBlockAndWaitOnMainThread:(/*^block*/id)arg1 ;
-(void)performBlockAndWakeUpMainThread:(/*^block*/id)arg1 ;
-(void)performBlock:(/*^block*/id)arg1 withAnimationDuration:(double)arg2 ;
-(void)performBlockAndWait:(/*^block*/id)arg1 usingQueue:(id)arg2 ;
-(void)performBlockOnMainThread:(/*^block*/id)arg1 ;
-(void)performBlockWithoutAnimations:(/*^block*/id)arg1 ;
-(void)__sp_parsec_forwardInvocation:(id)arg1 ;
-(long long)plCompare:(id)arg1 ;
-(BOOL)isNil;
-(void)sfu_appendJsonStringToString:(id)arg1 ;
-(void)tsu_runBlock;
-(void)tsu_performSelector:(SEL)arg1 withValue:(id)arg2 ;
-(void)npkFakeArcRetain;
-(BOOL)ICLogging_isLoggingEnabledAtLevel:(int)arg1 ;
-(id)hk_midPointToValue:(id)arg1 percentage:(double)arg2 ;
-(BOOL)hk_animatable;
-(id)nullToNil;
-(NSString *)logID;
-(id)addKVOBlockForKeyPath:(id)arg1 options:(unsigned long long)arg2 identifier:(id)arg3 handler:(/*^block*/id)arg4 ;
-(id)addKVOBlockForKeyPath:(id)arg1 options:(unsigned long long)arg2 handler:(/*^block*/id)arg3 ;
-(id)addOneShotKVOBlockForKeyPath:(id)arg1 options:(unsigned long long)arg2 handler:(/*^block*/id)arg3 ;
-(id)addOneShotKVOBlockForKeyPath:(id)arg1 options:(unsigned long long)arg2 identifier:(id)arg3 handler:(/*^block*/id)arg4 ;
-(void)removeKVOBlockForKeyPath:(id)arg1 identifier:(id)arg2 ;
-(void)removeKVOBlockForToken:(id)arg1 ;
-(id)allKVOObservers;
-(id)initFromPQLResultSet:(id)arg1 error:(id*)arg2 ;
-(id)deepMutableObject;
-(void)_gkRefreshPhotoForPlayer:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)_gkAuthenticatedPlayerID;
-(void)_gkSetupAccountWithParamaters:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_gkRemoveObserverWithBlockToken:(id)arg1 ;
-(id)_gkAddObserverForKeyPath:(id)arg1 options:(unsigned long long)arg2 withBlock:(/*^block*/id)arg3 ;
-(id)_gkViewDebuggingChildKeys;
-(id)_gkViewDebuggingChildren;
-(id)_gkDescriptionWithChildren:(int)arg1 ;
-(id)_gkRecursiveDescription;
-(id)_gkDescription;
-(void)_gkPopulateWithObject:(id)arg1 keymap:(id)arg2 ;
-(void)setValuesForKeysToNil:(id)arg1 ;
-(BOOL)isNull;
-(BOOL)boolValueSafe;
-(const char*)utf8ValueSafe:(int*)arg1 ;
-(const char*)utf8ValueSafe;
-(double)doubleValueSafe;
-(BOOL)boolValueSafe:(int*)arg1 ;
-(double)doubleValueSafe:(int*)arg1 ;
-(id)stringValueSafe:(int*)arg1 ;
-(id)stringValueSafe;
-(long long)int64ValueSafe;
-(long long)int64ValueSafe:(int*)arg1 ;
-(id)naui_addNotificationBlockObserverForName:(id)arg1 object:(id)arg2 queue:(id)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)naui_removeNotificationBlockObserver:(id)arg1 ;
-(void)_naui_addNotificationObserverProxy:(id)arg1 ;
-(void)_naui_removeNotificationObserverProxy:(id)arg1 ;
-(id)naui_associatedObjectForDescriptor:(const SCD_Struct_NS2*)arg1 ;
-(void)naui_setAssociatedObject:(id)arg1 assocatedObjectDescriptor:(const SCD_Struct_NS2*)arg2 ;
-(id)naui_addNotificationBlockObserverForObject:(id)arg1 keyPath:(id)arg2 options:(unsigned long long)arg3 usingBlock:(/*^block*/id)arg4 ;
-(void)smsComposeControllerDataInserted:(id)arg1 ;
-(void)smsComposeControllerAppeared:(id)arg1 ;
-(void)smsComposeControllerCancelled:(id)arg1 ;
-(void)smsComposeControllerSendStarted:(id)arg1 ;
-(id)mf_objectWithHighest:(/*^block*/id)arg1 ;
-(BOOL)__accessibilityRespondsToTextInput;
-(void)_accessibilitySetTextSelection:(NSRange)arg1 ;
-(long long)_accessibilityScrollPositionForCellOverride:(long long)arg1 ;
-(void)mf_performOnewaySelectorInMainThread:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 ;
-(void)da_addNullRunLoopSourceAndPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4 ;
-(void)da_performSelectorThatDoesntAffectRetainCount:(SEL)arg1 withObject:(id)arg2 ;
-(void)CKAssignToContainerWithID:(id)arg1 ;
-(id)CKDescription;
-(id)CKPropertiesDescription;
-(id)CalClassName;
-(void)performBlockOnMainThreadSynchronously:(/*^block*/id)arg1 ;
-(BOOL)isNull;
-(void)_ICSStringWithOptions:(unsigned long long)arg1 appendingToString:(id)arg2 ;
-(id)_ICSStringWithOptions:(unsigned long long)arg1 ;
-(id)_accessibilityQuickSpeakContent;
-(BOOL)_accessibilityIsTextInput;
-(void)_accessibilityPauseSpeaking:(id)arg1 ;
-(void)_accessibilitySpeakLanguageSelection:(id)arg1 ;
-(void)_accessibilitySpeak:(id)arg1 ;
-(BOOL)_accessibilityQuickSpeakContentIsSpeakable;
-(BOOL)_accessibilityQScanPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(BOOL)_accessibilityShouldShowPauseBubble;
-(BOOL)_accessibilitySystemShouldShowPauseBubble;
-(BOOL)_accessibilityShouldShowSpeakLanguageBubble;
-(BOOL)_accessibilitySystemShouldShowSpeakLanguageBubble;
-(BOOL)_accessibilityShouldShowSpeakBubble;
-(BOOL)_accessibilitySystemShouldShowSpeakBubble;
-(BOOL)_accessibilitySystemShouldShowSpeakBubbleCommon;
-(BOOL)_accessibilityShouldUpdateQuickSpeakContent;
-(void)_accessibilityCacheContentIfNecessary;
-(id)_accessibilitySpeakSelectionTextInputResponder;
-(void)_accessibilitySpeakWithLanguage:(id)arg1 ;
-(id)_accessibilitySpeakSelectionAssociatedScrollView;
-(id)pl_briefDescription;
-(BOOL)cplIsEqual:(id)arg1 ;
-(unsigned long long)cplHash;
-(id)cplFullDescription;
-(void)cplEncodePropertiesWithCoder:(id)arg1 ;
-(void)cplDecodePropertiesFromCoder:(id)arg1 ;
-(void)cplCopyPropertiesFromObject:(id)arg1 ;
-(BOOL)cplSpecialIsEqual:(id)arg1 ;
-(unsigned long long)cplSpecialHash;
-(BOOL)cplProperties:(id)arg1 areEqualToPropertiesOf:(id)arg2 ;
-(BOOL)cplProperties:(id)arg1 areEqualToPropertiesOf:(id)arg2 differingProperty:(id*)arg3 ;
-(id)cplDeepCopy;
-(void)_cplCopyProperties:(id)arg1 fromOtherObject:(id)arg2 ;
-(void)cplCopyProperties:(id)arg1 fromObject:(id)arg2 ;
-(id)storedClassNameForCPLArchiver:(id)arg1 ;
-(id)plistArchiveWithCPLArchiver:(id)arg1 ;
-(id)initWithCPLArchiver:(id)arg1 ;
-(BOOL)__isSKUIDynamicGridSizeCacheKey;
-(id)responderChainProxy:(id)arg1 ;
-(BOOL)_mapkit_isInternalAnnotationView;
-(BOOL)_mapkit_isInternalAnnotation;
-(BOOL)_mapkit_internalAnnotationAllowsCustomView;
-(id)MPMediaLibraryDataProviderSystemML3CoercedString;
-(id)MP_shortDescription;
-(void)__crossedTimeMarkerNotification:(id)arg1 ;
-(void)registerForTimeMarkerNotificationsIfNecessaryForPlayer:(id)arg1 ;
-(void)unregisterForTimeMarkerNotifications;
-(void)_nonRetainingPerformSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4 ;
-(id)_MPCancellableDispatchAccessQueue;
-(BOOL)cancelPreviousDispatchAsyncWithCancellationIdentifier:(id)arg1 ;
-(void)dispatchAsyncWithCancellationIdentifier:(id)arg1 delay:(double)arg2 queue:(id)arg3 block:(/*^block*/id)arg4 ;
-(id)ml_stringValueForSQL;
-(void)ml_bindToSQLiteStatement:(sqlite3_stmtRef)arg1 atPosition:(int)arg2 ;
-(BOOL)ml_matchesValue:(id)arg1 usingComparison:(int)arg2 ;
-(id)delayedProxy:(double)arg1 ;
-(id)mainThreadProxy;
-(id)blockingMainThreadProxy;
-(void)cl_json_serializeValue:(value_ostream*)arg1 ;
-(id)cl_json_serializeKey;
-(void)mf_lock;
-(void)mf_unlock;
-(id)mf_strictLockOrdering;
-(id)mf_exclusiveLocks;
-(id)_mf_lockOrderingForType:(int)arg1 ;
-(void)_mf_dumpLockCallStacks:(unsigned long long)arg1 ordering:(id)arg2 ;
-(BOOL)_mf_ntsIsLocked;
-(void)_mf_checkToAllowOrderingWithLock:(id)arg1 ;
-(void)_mf_checkToAllowStrictProgressionWithLock:(id)arg1 ;
-(void)_mf_checkToAllowExclusiveLocksWithLock:(id)arg1 ;
-(void)_mf_checkToAllowLock:(id)arg1 ;
-(BOOL)mf_tryLockWithPriority;
-(void)mf_lockWithPriority;
-(BOOL)mf_tryLock;
-(id)mf_lockOrdering;
-(void)cn_updateDictionaryForKey:(id)arg1 withChanges:(id)arg2 ;
-(BOOL)__canBecomeCNZombie;
-(void)__saveCNZombieRRStacks;
-(void)__gatherCNZombieRRStack;
-(BOOL)__becomeACNZombie;
-(BOOL)accessibilityExpandMathEquation:(id)arg1 ;
-(BOOL)_accessibilityUserTestingIsCancelButton;
-(void)_accessibilitySetUserTestingIsCancelButton:(BOOL)arg1 ;
-(void)_accessibilitySetUserTestingIsDefaultButton:(BOOL)arg1 ;
-(id)_accessibilityUserTestingChildren;
-(id)_accessibilityAbsoluteValue;
-(long long)_accessibilityUserTestingChildrenCount;
-(BOOL)_accessibilityUserTestingIsDefaultButton;
-(id)_accessibilityUserTestingParent;
-(id)_accessibilityUserTestingElementType;
-(BOOL)_accessibilityFauxCollectionViewCellsDisabled;
-(BOOL)_accessibilityUserTestingIsBackNavButton;
-(BOOL)_accessibilityUserTestingIsRightNavButton;
-(id)_accessibilityKeyboardKeyEnteredString;
-(id)_accessibilityUserTestingElementBaseType;
-(id)_accessibilityUserTestingChildrenWithRange:(NSRange)arg1 ;
-(id)_accessibilityUserTestingSnapshotWithOptions:(id)arg1 ;
-(id)_accessibilityAncestry;
-(id)_accessibilityUserTestingElementAttributes;
-(id)_accessibilityUserTestingSnapshot;
-(void)_setAccessibilityFauxCollectionViewCellsDisabled:(BOOL)arg1 ;
-(BOOL)_accessibilityUserTestingIsContinuityButton;
-(id)_accessibilityUserTestingSupplementaryViews:(BOOL)arg1 ;
-(id)_accessibilityUserTestingSnapshotDescendantsWithAttributes:(id)arg1 maxDepth:(unsigned long long)arg2 maxChildren:(unsigned long long)arg3 maxArrayCount:(unsigned long long)arg4 ;
-(id)_accessibilityUserTestingSnapshotAncestorsWithAttributes:(id)arg1 maxDepth:(unsigned long long)arg2 maxChildren:(unsigned long long)arg3 maxArrayCount:(unsigned long long)arg4 ;
-(void)_accessibilityElementsDescriptionProcess:(id)arg1 tabCount:(long long)arg2 ;
-(id)_axElementsDescription;
-(int)_accessibilityScannerGroupTraits;
-(BOOL)_accessibilityIsScannerGroup;
-(BOOL)_accessibilityIsScannerElement;
-(void)_accessibilityProcessScannerGroupElementPieces:(id)arg1 ;
-(id)_accessibilityScannerGroupElements;
-(int)_accessibilityScannerActivateBehavior;
-(void)_accessibilitySetIsScannerElement:(BOOL)arg1 ;
-(void)_accessibilitySetIsScannerGroup:(BOOL)arg1 ;
-(void)_accessibilitySetScannerGroupTraits:(int)arg1 ;
-(void)_accessibilitySetScannerActivateBehavior:(int)arg1 ;
-(id)_accessibilityNativeFocusElement;
-(id)_accessibilityNativeFocusPreferredElement;
-(BOOL)accessibilityPerformAction:(int)arg1 withValue:(id)arg2 ;
-(id)_accessibilitySpeakThisElementsAndStrings;
-(BOOL)_accessibilityNativeFocusPreferredElementIsValid;
-(BOOL)_isAccessibilityExplorerElement;
-(BOOL)_accessibilityCanBecomeNativeFocused;
-(id)_accessibilityElementsWithSemanticContext;
-(id)_accessibilityExplorerElements;
-(id)_accessibilityNativeFocusableElements;
-(BOOL)_accessibilitySpeakThisShouldOnlyIncludeVisibleElements;
-(id)_accessibilityNativeFocusAncestor;
-(BOOL)_accessibilityHasNativeFocus;
-(BOOL)_accessibilitySetNativeFocus;
-(BOOL)_accessibilityIgnoreDelegate;
-(void)_accessibilitySetIgnoreDelegate:(BOOL)arg1 ;
-(BOOL)_accessibilityShouldIgnoreSoundForFailedMoveAttempt;
-(id)_accessibilityTextRectsForRange:(id)arg1 singleTextRect:(CGRect*)arg2 ;
-(id)_accessibilityTextRectsForSpeakThisStringRange:(NSRange)arg1 ;
-(CGPoint)_accessibilityScreenPointForSceneReferencePoint:(CGPoint)arg1 ;
-(BOOL)_accessibilitySpeakThisCanBeHighlighted;
-(BOOL)_accessibilitySpeakThisShouldScrollTextRects;
-(id)_accessibilityFrameDelegate;
-(BOOL)_accessibilityIgnoresChildrenForNativeFocus;
-(BOOL)_accessibilityHandleMagicTap;
-(void)_accessibilitySetActionBlock:(/*^block*/id)arg1 withValue:(id)arg2 forKey:(unsigned)arg3 ;
-(BOOL)_accessibilityHasActionBlockForKey:(unsigned)arg1 ;
-(void)_accessibilityActionBlock:(/*^block*/id*)arg1 andValue:(id*)arg2 forKey:(unsigned)arg3 ;
-(CGRect)_accessibilityScreenRectForSceneReferenceRect:(CGRect)arg1 ;
-(BOOL)_accessibilityInternalHandleStartStopToggle;
-(unsigned long long)_accessibilitySpeakThisMaximumNumberOfElements;
-(void)_accessibilityRemoveAllActionBlocks;
-(void)_accessibilityRemoveActionBlockForKey:(unsigned)arg1 ;
-(BOOL)_accessibilityMimicsTextInputResponder;
-(id)_accessibilityAggregatedHeaderElements;
-(id)_accessibilityAutoscrollTarget;
-(int)_accessibilityAvailableAutoscrollDirections;
-(BOOL)_accessibilityIsAutoscrolling;
-(void)_accessibilitySetAutoscrollTarget:(id)arg1 ;
-(void)_accessibilityAutoscrollInDirection:(int)arg1 ;
-(void)_accessibilityPauseAutoscrolling;
-(void)_accessibilityIncreaseAutoscrollSpeed;
-(void)_accessibilityDecreaseAutoscrollSpeed;
-(void)_accessibilityAutoscrollScrollToTop;
-(void)_accessibilityAutoscrollScrollToBottom;
-(id)accessibilityIdentification;
-(id)_accessibilityAncestorIsKindOf:(Class)arg1 ;
-(id)_accessibilityFindSubviewDescendantsPassingTest:(/*^block*/id)arg1 ;
-(long long)accessibilityCompareGeometry:(id)arg1 ;
-(id)_accessibilityHitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(BOOL)_accessibilityHitTestShouldFallbackToNearestChild;
-(id)_accessibilityFuzzyHitTestElements;
-(void)_accessibilityLoadAccessibilityInformation;
-(void)_accessibilitySetCameraIrisOpen:(BOOL)arg1 ;
-(BOOL)_accessibilityServesAsFirstResponder;
-(BOOL)_accessibilityIsDescendantOfElement:(id)arg1 ;
-(id)_accessibilityResponderElement;
-(BOOL)_accessibilityIsFrameOutOfBounds;
-(BOOL)_accessibilityCanBeFirstResponderWhenNotAnElement;
-(id)_accessibilityViewAncestorIsKindOf:(Class)arg1 ;
-(BOOL)_accessibilityHasOrderedChildren;
-(void)accessibilityEnumerateContainerElementsUsingBlock:(/*^block*/id)arg1 ;
-(BOOL)_accessibilityIsWebDocumentView;
-(id)_accessibilityFindSubviewDescendant:(/*^block*/id)arg1 ;
-(BOOL)_accessibilityIsMainWindow;
-(BOOL)_accessibilityIsIsolatedWindow;
-(BOOL)isAccessibilityOpaqueElementProvider;
-(BOOL)_accessibilityWantsOpaqueElementProviders;
-(void)_accessibilitySetShouldPreventOpaqueScrolling:(BOOL)arg1 ;
-(id)_accessibilityFirstOpaqueElementForFocus;
-(id)_accessibilityFirstOpaqueElement;
-(id)_accessibilityLastOpaqueElement;
-(void)accessibilityEnumerateContainerElementsWithOptions:(unsigned long long)arg1 usingBlock:(/*^block*/id)arg2 ;
-(id)_accessibilityFindAncestor:(/*^block*/id)arg1 startWithSelf:(BOOL)arg2 ;
-(BOOL)_accessibilityServesAsFirstElement;
-(BOOL)_accessibilityIsNotFirstElement;
-(id)_accessibilityUnignoredDescendant;
-(BOOL)_accessibilityIsFirstElementForFocus;
-(BOOL)_accessibilityIsTitleElement;
-(id)_accessibilityParentView;
-(id)_accessibilityFirstElementForFocus;
-(id)_accessibilityBundleIdentifier;
-(id)_accessibilitySemanticContext;
-(id)accessibilityAttributeValue:(int)arg1 ;
-(id)_accessibilitySemanticContextForElement:(id)arg1 ;
-(BOOL)_accessibilitySupportsSemanticContext;
-(id)_accessibilityApplicationSemanticContext;
-(CGRect)_accessibilityConvertSystemBoundedScreenRectToContextSpace:(CGRect)arg1 ;
-(BOOL)accessibilityStartStopToggle;
-(id)_accessibilityElementsForSearchParameter:(id)arg1 ;
-(id)_accessibilityTableViewCellWithRowIndex:(long long)arg1 andColumn:(long long)arg2 ;
-(BOOL)_accessibilityDispatchKeyboardAction:(id)arg1 ;
-(id)_accessibilityElementCommunityIdentifier;
-(id)_accessibilityRetrieveImagePathLabel:(id)arg1 ;
-(void)_accessibilitySetAuditIssueForType:(unsigned long long)arg1 description:(id)arg2 resolution:(id)arg3 ;
-(id)_accessibilityAuditIssuesWithOptions:(id)arg1 ;
-(unsigned long long)_accessibilityNativeTraits;
-(BOOL)_accessibilityOverridesInvisibility;
-(void)_accessibilityResetContainerElements;
-(int)_accessibilityPickerType;
-(BOOL)_accessibilityIsSpeakThisElement;
-(BOOL)_accessibilityIsRTL;
-(CGPoint)_accessibilityMinScrubberPosition;
-(CGPoint)_accessibilityMaxScrubberPosition;
-(BOOL)_accessibilitySupportsActivateAction;
-(BOOL)_accessibilityScrollToFrame:(CGRect)arg1 forView:(id)arg2 ;
-(id)_accessibilitySortedElementsWithin;
-(id)_accessibilityHeaderElement;
-(id)accessibilityContainerElements;
-(id)_accessibilitySupplementaryHeaderViews;
-(id)_accessibilitySupplementaryFooterViews;
-(id)_accessibilityHitTestSupplementaryViews:(id)arg1 point:(CGPoint)arg2 withEvent:(id)arg3 ;
-(id)_accessibilityScrollStatus;
-(BOOL)_accessibilityIsVisibleByCompleteHitTest;
-(BOOL)_accessibilityOpaqueElementScrollsContentIntoView;
-(id)_accessibilityOpaqueHeaderElementInDirection:(int)arg1 childElement:(id)arg2 ;
-(BOOL)accessibilityScrollLeftPageSupported;
-(BOOL)accessibilityScrollRightPageSupported;
-(id)_accessibilityUserTestingVisibleSections;
-(id)_accessibilityUserTestingVisibleCells;
-(id)_accessibilityFirstVisibleItem;
-(void)_accessibilityOpaqueElementScrollCleanup;
-(void)_accessibilityPostPasteboardTextForOperation:(id)arg1 ;
-(void)_accessibilityIgnoreNextPostPasteboardTextOperation:(id)arg1 ;
-(id)_accessibilityIndexPath;
-(void)_accessibilitySwitchOrderedChildrenFrom:(id)arg1 ;
-(void)_accessibilityUpdateContainerElementReferencesIfNeededForNewElements:(id)arg1 ;
-(id)_accessibilityElements;
-(BOOL)_accessibilityLanguageOverriddesUser;
-(BOOL)_accessibilityTableCellUsesDetailTextAsValue;
-(long long)_accessibilityCompareElement:(id)arg1 toElement:(id)arg2 ;
-(BOOL)_accessibilityRespectsTableScrollEnabledFlag;
-(id)_accessibilityCustomActions;
-(BOOL)_accessibilityIsInTableCell;
-(NSRange)_accessibilityIndexPathAsRange;
-(BOOL)_accessibilityIsTableCell;
-(BOOL)_accessibilityScrollToVisibleForNextElementRetrieval:(int)arg1 ;
-(double)_accessibilityAllowedGeometryOverlapX;
-(double)_accessibilityAllowedGeometryOverlap;
-(void)_accessibilityPostValueChangedNotificationWithChangeType:(CFStringRef)arg1 ;
-(id)_accessibilityTextFieldText;
-(float)_accessibilityActivationDelay;
-(id)_accessibilityDataDetectorScheme:(CGPoint)arg1 ;
-(id)_accessibilityAttributedValueForRange:(NSRange*)arg1 ;
-(CGRect)_accessibilityBoundsForRange:(NSRange)arg1 ;
-(id)accessibilityCustomRotorTitles;
-(BOOL)_allowCustomActionHintSpeakOverride;
-(id)accessibilityCustomRotorItemsAtIndex:(long long)arg1 ;
-(BOOL)_accessibilityWindowVisible;
-(BOOL)_accessibilityOnlyComparesByXAxis;
-(id)_accessibilityViewController;
-(BOOL)_accessibilityServesAsContainingParentForOrdering;
-(id)isAccessibilityUserDefinedWindow;
-(id)_accessibilityHitTestSupplementaryViews:(CGPoint)arg1 event:(id)arg2 ;
-(BOOL)_accessibilityIsTouchContainer;
-(BOOL)accessibilityIsWindow;
-(id)_accessibilityCirclePathBasedOnBoundsWidth;
-(id)_accessibilityAutomaticIdentifier;
-(long long)_accessibilityHorizontalSizeClass;
-(long long)_accessibilityVerticalSizeClass;
-(id)_accessibilitySupportGesturesAttributes;
-(BOOL)_accessibilityIsUserInteractionEnabled;
-(BOOL)_accessibilityIsAwayAlertElement;
-(id)_accessibilityLineNumberAndColumnForPoint:(CGPoint)arg1 ;
-(NSRange)_accessibilityRangeForLineNumberAndColumn:(id)arg1 ;
-(id)_accessibilityEquivalenceTag;
-(id)_accessibilityOrderedChildrenContainer;
-(id)_accessibilityTextViewTextOperationResponder;
-(id)_accessibilityTextOperations;
-(void)_accessibilityCut;
-(void)_accessibilitySelect;
-(void)_accessibilityPaste;
-(void)_accessibilitySelectAll;
-(BOOL)_accessibilityHasTextOperations;
-(id)_accessibilitySpeakThisString;
-(BOOL)_accessibilityRetainsCustomRotorActionSetting;
-(BOOL)_accessibilityBackingElementIsValid;
-(id)_accessibilityUserTestingVisibleAncestor;
-(id)isAccessibilityUserDefinedScrollAncestor;
-(BOOL)_accessibilityScrollingEnabled;
-(BOOL)_accessibilityShouldPreventOpaqueScrolling;
-(void)_accessibilityScrollOpaqueElementIntoView:(int)arg1 previousScroller:(id)arg2 ;
-(BOOL)_accessibilityScrollAcrossPageBoundaries;
-(UIEdgeInsets)_accessibilityVisibleContentInset;
-(BOOL)_accessibilityIsScrollAncestor;
-(CGPoint)_accessibilityContentOffset;
-(BOOL)accessibilityScrollUpPageSupported;
-(BOOL)accessibilityScrollDownPageSupported;
-(long long)_accessibilityPageCount;
-(long long)_accessibilityPageIndex;
-(void)accessibilityZoomInAtPoint:(CGPoint)arg1 ;
-(void)accessibilityZoomOutAtPoint:(CGPoint)arg1 ;
-(CGPoint)_accessibilityVisibleScrollArea:(BOOL)arg1 ;
-(BOOL)accessibilityScrollUpPage;
-(BOOL)accessibilityScrollDownPage;
-(BOOL)accessibilityScrollLeftPage;
-(BOOL)accessibilityScrollRightPage;
-(CGRect)_accessibilityContentFrame;
-(void)_accessibilitySetVisibleContentInset:(UIEdgeInsets)arg1 ;
-(unsigned long long)_accessibilityDatePickerComponentType;
-(long long)_accessibilityIndexForPickerString:(id)arg1 ;
-(id)_accessibilityDateTimePickerValues;
-(id)_accessibilityScrollAncestor;
-(NSRange)_accessibilityLineRangeForPosition:(unsigned long long)arg1 ;
-(id)_accessibilityBriefLabel;
-(id)accessibilityUserDefinedOpaqueElementScrollsContentIntoView;
-(BOOL)_accessibilityDescendantElementAtIndexPathIsValid:(id)arg1 ;
-(BOOL)_accessibilitySortCollectionViewLogically;
-(BOOL)_accessibilityKeyboardSupportsGestureMode;
-(id)_accessibilityKeyboardKeyForString:(id)arg1 ;
-(void)_accessibilityChangeToKeyplane:(id)arg1 ;
-(id)_accessibiltyAvailableKeyplanes;
-(void)_accessibilityConvertStyleAttributesToAccessibility:(id)arg1 ;
-(void)_accessibilityAddMispellingsToAttributedString:(id)arg1 ;
-(BOOL)_accessibilityShouldAnnounceFontInfo;
-(void)_accessibilityPostValueChangedNotificationWithInsertedText:(id)arg1 ;
-(double)_accessibilityDelayBeforeUpdatingOnActivation;
-(id)_accessibilityPhotoDescription;
-(id)_accessibilityFindDescendant:(/*^block*/id)arg1 ;
-(id)_accessibilityOpaqueElementsFrom:(id)arg1 direction:(int)arg2 searchTraits:(unsigned long long)arg3 ;
-(void)_accessibilityJumpToTableIndex:(id)arg1 ;
-(id)accessibilityMenuActions;
-(void)_accessibilityDelete;
-(void)_accessibilityReplace;
-(id)_accessibilityRoleDescription;
-(BOOL)_accessibilityOverridesInstructionsHint;
-(void)_accessibilitySetIsSpeakThisElement:(BOOL)arg1 ;
-(id)_accessibilityHandwritingAttributes;
-(BOOL)_accessibilityShouldAvoidScrollingCollectionViewCells;
-(BOOL)_accessibilityCanDismissPopoverController:(id)arg1 ;
-(id)_accessibilityVisibleItemInList;
-(id)_accessibilityDescendantOfType:(Class)arg1 ;
-(void)_accessibilitySetOverridesInvisibility:(BOOL)arg1 ;
-(BOOL)_accessibilityAlwaysOrderedFirst;
-(BOOL)_accessibilityAllowsAlternativeCharacterActivation;
-(BOOL)_accessibilityHasVariantKeys;
-(id)_accessibilityVariantKeys;
-(BOOL)_accessibilityTriggerDictationFromPath:(id)arg1 ;
-(void)_accessibilitySetSortPriority:(long long)arg1 ;
-(BOOL)_accessibilityShouldAttemptScrollToFrameOnParentView;
-(BOOL)_accessibilityIsInternationalKeyboardKey;
-(BOOL)_accessibilityKeyboardKeyAllowsTouchTyping;
-(BOOL)_accessibilityDismissAlternativeKeyPicker;
-(BOOL)_accessibilityKeyboardKeyHasSignificantAlternateActions;
-(void)_accessibilitySetAnimationsInProgress:(BOOL)arg1 ;
-(void)_setAccessibilityIsMainWindow:(BOOL)arg1 ;
-(long long)_accessibilitySortPriority;
-(long long)accessibilityLineNumberForPoint:(CGPoint)arg1 ;
-(id)accessibilityContentForLineNumber:(long long)arg1 ;
-(CGRect)accessibilityFrameForLineNumber:(long long)arg1 ;
-(id)accessibilityPageContent;
-(id)_accessibilityActiveKeyboard;
-(long long)_accessibilityLineEndPosition;
-(long long)_accessibilityLineStartPosition;
-(void)accessibilitySetIdentification:(id)arg1 ;
-(NSArray *)accessibilityHeaderElements;
-(void)accessibilityElementDidBecomeFocused;
-(void)accessibilityElementDidLoseFocus;
-(BOOL)accessibilityElementIsFocused;
-(id)accessibilityAssistiveTechnologyFocusedIdentifiers;
-(void)accessibilityIncrement;
-(void)accessibilityDecrement;
-(BOOL)accessibilityActivate;
-(BOOL)_accessibilityElementShouldBeInvalid;
-(void)accessibilitySetValue:(id)arg1 forAttribute:(int)arg2 ;
-(BOOL)_accessibilityHitTestsStatusBar;
-(id)_accessibilityTouchContainer;
-(id)accessibilityAttributeValue:(int)arg1 forParameter:(id)arg2 ;
-(BOOL)accessibilityShouldEnumerateContainerElementsArrayDirectly;
-(BOOL)_accessibilitySpeakThisIgnoresAccessibilityElementStatus;
-(BOOL)_accessibilityIsRemoteElement;
-(id)_accessibilityWindow;
-(CGRect)_accessibilityVisibleFrame;
-(BOOL)_accessibilityOverridesInvalidFrames;
-(id)_accessibilityBaseHitTest:(CGPoint)arg1 withEvent:(id)arg2 ;
-(BOOL)_accessibilityHitTestReverseOrder;
-(BOOL)_accessibilityIsMap;
-(id)accessibilityUserDefinedWindowVisible;
-(id)accessibilityUserDefinedIsMainWindow;
-(void)_accessibilityIterateScrollParentsUsingBlock:(/*^block*/id)arg1 includeSelf:(BOOL)arg2 ;
-(BOOL)_accessibilityShouldUseViewHierarchyForFindingScrollParent;
-(id)_accessibilityParentForFindingScrollParent;
-(void)_accessibilityIterateScrollParentsUsingBlock:(/*^block*/id)arg1 ;
-(id)_accessibilityScrollAncestorForSelector:(SEL)arg1 ;
-(BOOL)_accessibilityShouldSpeakScrollStatusOnEntry;
-(id)_accessibilityScrollAncestorForSelector:(SEL)arg1 alwaysAllowRefreshAction:(BOOL)arg2 ;
-(BOOL)_accessibilityCanPerformEscapeAction;
-(BOOL)_accessibilityIterateParentsForTestBlock:(/*^block*/id)arg1 ;
-(BOOL)_accessibilityCanPerformAction:(int)arg1 ;
-(BOOL)_accessibilityBaseScrollToVisible;
-(CGRect)accessibilityFrameForScrolling;
-(id)_accessibilityRemoteParent;
-(BOOL)_accessibilityShouldScrollRemoteParent;
-(void)_accessibilitySendPageScrollFailedIfNecessary;
-(BOOL)_accessibilityHandlePublicScroll:(long long)arg1 ;
-(BOOL)_accessibilityTryScrollWithSelector:(SEL)arg1 ;
-(id)_accessibilityLastElementsUpdatedWithContainerElementReferences;
-(void)_accessibilitySetLastElementsUpdatedWithContainerElementReferences:(id)arg1 ;
-(id)_accessibilitySwipeIslandIdentifier;
-(BOOL)accessibilityScrollToTopSupported;
-(BOOL)accessibilityPerformCustomAction:(long long)arg1 ;
-(BOOL)_accessibilityPerformLegacyCustomAction:(id)arg1 ;
-(id)_retrieveCustomActions;
-(CGPoint)_accessibilityVisiblePointHitTestingAnyElement:(BOOL)arg1 ;
-(unsigned)_accessibilityContextId;
-(BOOL)_accessibilityVisiblePointHonorsScreenBounds;
-(CGPoint)_accessibilityVisiblePoint;
-(BOOL)_accessibilityIsStarkElement;
-(id)accessibilityUserDefinedServesAsFirstElement;
-(id)accessibilityUserDefinedNotFirstElement;
-(id)_accessibilityContainerForAccumulatingCustomRotorItems;
-(void)_accessibilityEnumerateAllCustomRotorTitlesWithAccumulator:(id*)arg1 usingBlock:(/*^block*/id)arg2 ;
-(BOOL)_accessibilityUpdatesOnActivationAfterDelay;
-(id)_accessibilityRawIsSpeakThisElement;
-(void)_accessibilityRawSetIsSpeakThisElement:(id)arg1 ;
-(id)_accessibilitySpeakThisStringValue;
-(id)accessibilityLabelForRange:(NSRange*)arg1 ;
-(id)_accessibilityScannerElementsGrouped:(BOOL)arg1 shouldIncludeNonScannerElements:(BOOL)arg2 ;
-(NSRange)_accessibilityRangeForTextMarker:(id)arg1 ;
-(id)_accessibilityValueForRange:(NSRange*)arg1 ;
-(id)_accessibilityAllCustomRotorItemsAtIndex:(long long)arg1 ;
-(BOOL)_accessibilityIsFirstSiblingForTrait:(unsigned long long)arg1 ;
-(BOOL)_accessibilityIsLastSiblingForTrait:(unsigned long long)arg1 ;
-(id)_accessibilityAncestorForSiblingsWithTraits:(unsigned long long)arg1 ;
-(CGRect)_accessibilityFrameForRange:(NSRange)arg1 ;
-(NSRange)_accessibilityRangeForLineNumber:(long long)arg1 ;
-(id)_accessibilityLineStartMarker:(id)arg1 ;
-(void)_accessibilityMoveSelectionToMarker:(id)arg1 ;
-(id)_accessibilityMarkerForPoint:(CGPoint)arg1 ;
-(id)_accessibilityMarkersForPoints:(id)arg1 ;
-(id)_accessibilityMarkersForRange:(NSRange)arg1 ;
-(id)_accessibilityMarkerLineEndsForMarkers:(id)arg1 ;
-(id)_accessibilityLineEndMarker:(id)arg1 ;
-(id)_accessibilityNextMarker:(id)arg1 ;
-(id)_accessibilityPreviousMarker:(id)arg1 ;
-(id)accessibilityStringForTextMarkers:(id)arg1 ;
-(id)_accessibilityObjectForTextMarker:(id)arg1 ;
-(CGRect)accessibilityBoundsForTextMarkers:(id)arg1 ;
-(float)_accessibilityDistance:(CGPoint)arg1 forAngle:(float)arg2 toRoad:(id)arg3 ;
-(id)_accessibilityUpcomingRoadsForPoint:(CGPoint)arg1 forAngle:(float)arg2 ;
-(float)_accessibilityDistanceFromEndOfRoad:(CGPoint)arg1 forAngle:(float)arg2 ;
-(BOOL)_accessibilityRoadContainsTrackingPoint:(CGPoint)arg1 ;
-(id)_accessibilityMapDetailedInfoAtPoint:(CGPoint)arg1 ;
-(id)accessibilityArrayOfTextForTextMarkers:(id)arg1 ;
-(CGPoint)_accessibilityScrollRectToVisible:(CGRect)arg1 ;
-(id)_accessibilityAccessibleDescendants;
-(id)_accessibilityAccessibleAncestor;
-(id)_accessibilityString:(id)arg1 withSpeechHint:(id)arg2 ;
-(BOOL)_accessibilityIsSoftwareKeyboardMimic;
-(BOOL)_accessibilityShouldInheritTraits;
-(unsigned long long)_accessibilityInheritedTraits;
-(BOOL)_accessibilityIsScrollable;
-(BOOL)_accessibilityReadAllContinuesWithScroll;
-(id)_accessibilityTraitsInspectorHumanReadable;
-(id)_accessibilityDOMAttributes;
-(CGRect)_accessibilityTextCursorFrame;
-(BOOL)_accessibilitySupportsPressedState;
-(BOOL)_accessibilityIsPressed;
-(id)accessibilityMathEquation;
-(id)accessibilityMathMLSource;
-(BOOL)_accessibilityShouldSpeakMathEquationTrait;
-(BOOL)_accessibilityIsTourGuideRunning;
-(id)_accessibilityConvertSystemBoundedPathToContextSpace:(id)arg1 ;
-(int)_accessibilityMapFeatureType;
-(BOOL)_accessibilityLastHitTestNearBorder;
-(id)_accessibilitySoftwareMimicKeyboard;
-(id)_accessibilityOpaqueElementParent;
-(id)_accessibilitySupportedLanguages;
-(id)_accessibilityHandwritingAncestor;
-(BOOL)_accessibilitySupportsDirectioOrbManipulation;
-(id)_accessibilityStatusBar;
-(int)_accessibilityPreferredScrollAction;
-(BOOL)_accessibilityShouldSuppressCustomActionsHint;
-(BOOL)_accessibilityIsInFolder;
-(BOOL)_accessibilityIsInAppSwitcher;
-(CGRect)_accessibilityGesturePracticeRegion;
-(BOOL)_accessibilityIsAccessibilityUIServer;
-(BOOL)_accessibilityShouldAvoidAnnouncing;
-(id)_accessibilityPageTextMarkerRange;
-(id)_accessibilityTextMarkerRange;
-(id)_accessibilityTextMarkerRangeForSelection;
-(NSRange)_accessibilitySelectedNSRangeForObject;
-(CGPoint)_accessibilityConvertSystemBoundedScreenPointToContextSpace:(CGPoint)arg1 ;
-(BOOL)_accessibilityCameraIrisOpen;
-(id)_accessibilityContainerInDirection:(BOOL)arg1 ;
-(BOOL)__accessibilityReadAllOnFocus;
-(BOOL)_accessibilityIsAwayAlertElementNew;
-(id)_accessibilityApplication;
-(BOOL)_accessibilityAnimationsInProgress;
-(BOOL)__accessibilitySupportsActivateAction;
-(BOOL)__accessibilitySupportsSecondaryActivateAction;
-(BOOL)_accessibilityIsEscapable;
-(id)_accessibilityWebAreaURL;
-(CGPoint)__accessibilityVisibleScrollArea:(BOOL)arg1 ;
-(id)_accessibilityPageContent;
-(BOOL)_accessibilityIncludeDuringContentReading;
-(BOOL)_accessibilitySupportsFrameForRange;
-(BOOL)_accessibilitySupportsRangeForLineNumber;
-(BOOL)_accessibilityWebSearchResultsActive;
-(id)_accessibilityActiveURL;
-(BOOL)_accessibilityWebViewIsLoading;
-(BOOL)_accessibilityIsFirstSibling;
-(BOOL)_accessibilityIsLastSibling;
-(id)_accessibilityInputIdentifierForKeyboard;
-(BOOL)_accessibilityBookShowsDualPages;
-(id)_accessibilityAllCustomRotorTitles;
-(id)_accessibilityCustomActionNamesAndIdentifiers;
-(id)_accessibilityElementStoredUserLabel;
-(id)_accessibilityVisibleElements;
-(BOOL)_accessibilityElementVisibilityAffectsLayout;
-(BOOL)_accessibilityCanScrollInAtLeastOneDirection;
-(id)_accessibilityUserTestingActionIdentifiers;
-(BOOL)_accessibilityIsUsingRemoteParentActivateAction;
-(id)_accessibilityTextInputElement;
-(id)_accessibilityVisibleOpaqueElements;
-(BOOL)_accessibilityHandwritingAttributeShouldEchoCharacter;
-(void)_accessibilityInsertText:(id)arg1 atPosition:(long long)arg2 ;
-(void)_accessibilityHandleATFocused:(BOOL)arg1 assistiveTech:(id)arg2 ;
-(void)_accessibilitySetWantsOpaqueElementProviders:(BOOL)arg1 ;
-(void)_accessibilitySetCurrentWordInPageContext:(id)arg1 ;
-(id)_accessibilityTraitsAsHumanReadableStrings:(unsigned long long)arg1 ;
-(BOOL)_accessibilityUsesSpecialKeyboardDismiss;
-(id)_accessibilitySearchSubtreesAfterChildElement:(id)arg1 direction:(int)arg2 searchTraits:(unsigned long long)arg3 allowOutOfBoundsChild:(BOOL)arg4 shouldRetryWithHitTest:(BOOL*)arg5 ;
-(void)accessibilitySetUserDefinedOpaqueElementScrollsContentIntoView:(id)arg1 ;
-(CGPoint)_accessibilityOffsetForOpaqueElementDirection:(int)arg1 ;
-(BOOL)_accessibilityApplicationIsRTL;
-(double)_accessibilityRightOpaqueScrollViewContentOffsetLimit;
-(double)_accessibilityLeftOpaqueScrollViewContentOffsetLimit;
-(void)_accessibilityOpaqueElementScrollToDirection:(int)arg1 ;
-(id)_accessibilityFindElementInDirection:(int)arg1 searchTraits:(unsigned long long)arg2 allowOutOfBoundsChild:(BOOL)arg3 ;
-(BOOL)_accessibilityOpaqueScrollViewSupportsLastResortScrollBeyondBounds;
-(id)_accessibilityFindAXDescendants:(/*^block*/id)arg1 byAddingElements:(/*^block*/id)arg2 ;
-(id)_accessibilityFindAnyAXDescendant:(/*^block*/id)arg1 byAddingElements:(/*^block*/id)arg2 ;
-(long long)_accessibilitySortPriorityWithReturningView:(id*)arg1 ;
-(BOOL)_accessibilityUsesChildrenFramesForSorting;
-(CGRect)_accessibilityChildrenUnionContentFrame;
-(CGRect)_accessibilityFrameForSorting;
-(CGRect)_handleRotatingFrame:(CGRect)arg1 fromOrientation:(long long)arg2 toOrientation:(long long)arg3 ;
-(id)_accessibilityContainingParentForOrdering;
-(CGRect)_accessibilityCompareFrameForScrollParent:(id)arg1 frame:(CGRect)arg2 fromOrientation:(long long)arg3 toOrientation:(long long)arg4 ;
-(CGPoint)_accessibilityDisplayPointForSceneReferencePoint:(CGPoint)arg1 ;
-(BOOL)_accessibilityIsFrameOutOfBoundsConsideringScrollParents:(BOOL)arg1 ;
-(void)accessibilityIncreaseTrackingDetail;
-(void)accessibilityDecreaseTrackingDetail;
-(BOOL)accessibilityEditOperationAction:(id)arg1 ;
-(BOOL)_accessibilityBasePerformOrbGesture:(long long)arg1 ;
-(void)_accessibilityPlaySystemSound:(int)arg1 ;
-(void)_accessibilityCleanupContainerElementReferences;
-(BOOL)_accessibilityShouldReleaseAfterUnregistration;
-(id)_accessibilityTextMarkerForPosition:(long long)arg1 ;
-(BOOL)_accessibilityReadAllOnFocus;
-(id)_accessibilityTextChecker;
-(void)_accessibilityPostValueChangedNotificationWithChangeType:(CFStringRef)arg1 insertedText:(id)arg2 ;
-(BOOL)_accessibilitySupportsHandwriting;
-(int)_accessibilityHandwritingAttributePreferredCharacterSet;
-(BOOL)_accessibilityHandwritingAttributeCanDeleteCharacter;
-(BOOL)_accessibilityHandwritingAttributeShouldPlayKeyboardSecureClickSound;
-(BOOL)_accessibilityHandwritingAttributeAcceptsRawInput;
-(int)_accessibilityHandwritingAttributeAllowedCharacterSets;
-(BOOL)_accessibilityHandwritingAttributeAcceptsContractedBraille;
-(id)_accessibilityHandwritingAttributeLanguage;
-(int)_accessibilityHandwritingAttributePreferredCharacterSetForKeyboardType:(long long)arg1 ;
-(int)_accessibilityHandwritingAttributeAllowedCharacterSetsForKeyboardType:(long long)arg1 ;
-(id)_accessibilityUserTestingActions;
-(void)_accessibilityPostNotificationHelper:(id)arg1 ;
-(BOOL)_accessibilitySecondaryActivate;
-(void)_accessibilitySetShoudHitTestFallBackToNearestChild:(BOOL)arg1 ;
-(BOOL)_accessibilitySelfFoundByHitTesting;
-(void)setIsAccessibilityWindow:(BOOL)arg1 ;
-(void)_setAccessibilityWindowVisible:(BOOL)arg1 ;
-(void)setIsAccessibilityScrollAncestor:(BOOL)arg1 ;
-(BOOL)_accessibilitySavePhotoLabel:(id)arg1 ;
-(void)_accessibilityScrollToPoint:(CGPoint)arg1 ;
-(BOOL)_accessibilityScrollLeftPage;
-(BOOL)_accessibilityScrollNextPage;
-(BOOL)_accessibilityScrollPreviousPage;
-(BOOL)_accessibilityScrollRightPage;
-(BOOL)_accessibilityScrollUpPage;
-(BOOL)_accessibilityScrollDownPage;
-(id)_accessibilityScrollParent;
-(BOOL)_accessibilityUsesScrollParentForOrdering;
-(id)_accessibilitySwipeIsland;
-(BOOL)_accessibilityAlwaysSpeakTableHeaders;
-(id)_accessibilityLaunchableApps;
-(id)_accessibilityAppSwitcherApps;
-(BOOL)_accessibilitySupportsMultipleCustomRotorTitles;
-(id)accessibilitySecondaryLabel;
-(BOOL)_accessibilityIsMathTouchExplorationView;
-(BOOL)_accessibilityOpaqueElementProvider;
-(void)_accessibilityRemoveTrait:(unsigned long long)arg1 ;
-(void)_accessibilityAddTrait:(unsigned long long)arg1 ;
-(void)_setAccessibilityServesAsFirstElement:(BOOL)arg1 ;
-(void)_setAccessibilityIsNotFirstElement:(BOOL)arg1 ;
-(void)_setAccessibilityUpdatesOnActivationAfterDelay:(BOOL)arg1 ;
-(void)_accessibilitySetRoleDescription:(id)arg1 ;
-(void)_accessibilitySetRowRange:(NSRange)arg1 ;
-(void)_accessibilityFindSearchResult:(BOOL)arg1 withString:(id)arg2 ;
-(BOOL)_accessibilityLoadURL:(id)arg1 ;
-(BOOL)_accessibilityContainedByTableLogicIsEnabledOutsideOfWebContext;
-(BOOL)_accessibilityCanDeleteTableViewCell;
-(BOOL)_accessibilityDidDeleteTableViewCell;
-(void)_setAccessibilityTableCellUsesDetailTextAsValue:(BOOL)arg1 ;
-(void)_accessibilitySetScrollAcrossPageBoundaries:(BOOL)arg1 ;
-(BOOL)_accessibilityDidSetOpaqueElementProvider;
-(void)setIsAccessibilityOpaqueElementProvider:(BOOL)arg1 ;
-(void)_accessibilitySetOpaqueElementScrollsContentIntoView:(BOOL)arg1 ;
-(BOOL)_accessibilityHasDescendantOfType:(Class)arg1 ;
-(id)accessibilityViewWithIdentifier:(id)arg1 ;
-(id)_accessibilityAncestorIsAccessibilityElementsHidden;
-(id)_accessibilityControlDescendantWithTarget:(id)arg1 ;
-(id)_accessibilityControlDescendantWithAction:(SEL)arg1 ;
-(void)setAccessibilitySize:(CGSize)arg1 ;
-(void)_accessibilitySetAllowedGeometryOverlap:(double)arg1 ;
-(CGRect)_accessibilityDisplayRectForSceneReferenceRect:(CGRect)arg1 ;
-(id)_accessibilityDisplayPathForScreenPath:(id)arg1 ;
-(CGAffineTransform)_accessibilityJailTransform;
-(void)_accessibilitySetCurrentGesture:(id)arg1 ;
-(BOOL)_accessibilityPerformCustomActionWithIdentifier:(id)arg1 ;
-(BOOL)_accessibilityTextOperationAction:(id)arg1 ;
-(BOOL)_accessibilityPerformOrbGesture:(long long)arg1 ;
-(void)_accessibilitySetIsTourGuideRunning:(BOOL)arg1 ;
-(void)_accessibilityPlayKeyboardClickSound;
-(void)__accessibilityUnregister:(void*)arg1 shouldRelease:(BOOL)arg2 ;
-(void)_accessibilityDetectAnimationsNonActive;
-(void)_setAccessibilityPhotoDescription:(id)arg1 ;
-(void)_accessibilityReplaceCharactersAtCursor:(unsigned long long)arg1 withString:(id)arg2 ;
-(BOOL)_accessibilityHandwritingActivateKeyboardReturnKey;
-(BOOL)_accessibilityHandwritingActivateKeyboardDeleteKey;
-(void)_accessibilityDecreaseSelection:(id)arg1 ;
-(void)_accessibilityIncreaseSelection:(id)arg1 ;
-(BOOL)_accessibilityPerformUserTestingAction:(id)arg1 ;
-(id)_axSuperviews;
-(id)_axDebugTraits;
-(void)_accessibilityAnnouncementComplete:(id)arg1 ;
-(void)_accessibilityIgnoreNextNotification:(unsigned)arg1 ;
-(void)accessibilityPostNotification:(unsigned)arg1 withObject:(id)arg2 afterDelay:(double)arg3 ;
-(void)_accessibilityPostAnnouncement:(id)arg1 ;
-(BOOL)_accessibilityShouldPerformIncrementOrDecrement;
-(id)accessibilityUserDefinedSize;
-(void)_accessibilityUnregister;
-(double)_accessibilityMinValue;
-(double)_accessibilityMaxValue;
-(id)accessibilityTitleElement;
-(id)accessibilityElementForRow:(long long)arg1 andColumn:(long long)arg2 ;
-(NSRange)accessibilityRowRange;
-(NSRange)accessibilityColumnRange;
-(id)accessibilityPlaceholderValue;
-(BOOL)accessibilityIsComboBox;
-(id)accessibilityURL;
-(CGPoint)_accessibilityConvertPointToViewSpace:(CGPoint)arg1 ;
-(BOOL)_accessibilityScrollToVisible;
-(BOOL)accessibilityRequired;
-(id)accessibilityFlowToElements;
-(id)accessibilityLinkedElement;
-(void)_accessibilitySetValue:(id)arg1 ;
-(NSRange)_accessibilitySelectedTextRange;
-(void)_accessibilitySetSelectedTextRange:(NSRange)arg1 ;
-(id)accessibilitySpeechHint;
-(id)accessibilityInvalidStatus;
-(id)accessibilityHitTest:(CGPoint)arg1 ;
-(BOOL)_accessibilityPerformEscape;
-(id)_accessibilityViewChildrenWithOptions:(id)arg1 ;
-(id)_accessibilityLeafDescendantsWithCount:(unsigned long long)arg1 options:(id)arg2 ;
-(id)_accessibilityLeafDescendantsWithOptions:(id)arg1 ;
-(id)_accessibilityLeafDescendantsWithCount:(unsigned long long)arg1 shouldStopAtRemoteElement:(BOOL)arg2 options:(id)arg3 ;
-(void)_accessibilityEnumerateSiblingsWithParent:(id*)arg1 options:(id)arg2 usingBlock:(/*^block*/id)arg3 ;
-(id)_accessibilityTreeAsStringWithOptions:(id)arg1 ;
-(void)_accessibilityTraverseTreeWithLogger:(id)arg1 options:(id)arg2 ;
-(void)_accessibilityTraverseTreeWithLogger:(id)arg1 shouldStopAtRemoteElement:(BOOL)arg2 options:(id)arg3 ;
-(id)_accessibilityLeafDescendantsWithCount:(unsigned long long)arg1 shouldStopAtRemoteElement:(BOOL)arg2 options:(id)arg3 treeLogger:(id)arg4 ;
-(BOOL)_accessibilityHasVisibleFrame;
-(BOOL)_accessibilityAppendOrderedChildLeafDescendantsToArray:(id)arg1 count:(unsigned long long)arg2 shouldStopAtRemoteElement:(BOOL)arg3 options:(id)arg4 treeLogger:(id)arg5 ;
-(BOOL)_accessibilityShouldUseSupplementaryViews;
-(void)_handleSupplementaryViewIfNeededWithOrderedChildrenContainer:(id*)arg1 childOfOrderedChildrenContainer:(id*)arg2 headerIndex:(unsigned long long*)arg3 footerIndex:(unsigned long long*)arg4 ;
-(void)_accessibilityEnumerateSiblingsFromOrderedChildrenContainer:(id)arg1 fromChildAtIndex:(long long)arg2 headerIndex:(long long)arg3 footerIndex:(long long)arg4 isMovingForward:(BOOL)arg5 usingBlock:(/*^block*/id)arg6 ;
-(id)_accessibilityParentFromOrderedChildrenContainer:(id)arg1 ;
-(id)_accessibilityElementsInDirectionWithCount:(unsigned long long)arg1 options:(id)arg2 ;
-(id)_accessibilityTreeAsString;
-(long long)_accessibilityCompareGeometryForViewOrDictionary:(id)arg1 ;
-(BOOL)_accessibilityShouldBeProcessed:(id)arg1 ;
-(BOOL)isAXAttributedString;
-(id)_accessibilityAttributedLocalizedString;
-(void)_setAccessibilityAttributedLocalizedString:(id)arg1 ;
-(id)_parentFocusEnvironment;
-(BOOL)shouldUpdateFocusFromView:(id)arg1 toView:(id)arg2 heading:(unsigned long long)arg3 ;
-(void)willUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2 ;
-(void)willUpdateFocusToView:(id)arg1 ;
-(void)didUpdateFocusFromView:(id)arg1 ;
-(id)className;
-(id)_NSItemProviderTypeCoercion_coercedUIImageValueFromNSURLValue:(id)arg1 error:(id*)arg2 ;
-(id)_NSItemProviderTypeCoercion_coercedUIImageValueFromNSDataValue:(id)arg1 error:(id*)arg2 ;
-(NSString *)accessibilityIdentifier;
-(void)setAccessibilityIdentifier:(NSString *)arg1 ;
-(unsigned long long)defaultAccessibilityTraits;
-(BOOL)isAccessibilityElementByDefault;
-(BOOL)isElementAccessibilityExposedToInterfaceBuilder;
-(void)_accessibilityFinalize;
-(void)accessibilitySetIdentification:(id)arg1 ;
-(long long)accessibilityElementCount;
-(id)accessibilityElementAtIndex:(long long)arg1 ;
-(long long)indexOfAccessibilityElement:(id)arg1 ;
-(NSArray *)accessibilityElements;
-(void)setAccessibilityElements:(NSArray *)arg1 ;
-(void)accessibilityIncrement;
-(void)accessibilityDecrement;
-(BOOL)accessibilityScroll:(long long)arg1 ;
-(BOOL)accessibilityPerformEscape;
-(BOOL)accessibilityPerformMagicTap;
-(BOOL)accessibilityActivate;
-(void)setAccessibilityCustomActions:(NSArray *)arg1 ;
-(NSArray *)accessibilityCustomActions;
-(void)accessibilityElementDidBecomeFocused;
-(void)accessibilityElementDidLoseFocus;
-(BOOL)accessibilityElementIsFocused;
-(id)accessibilityAssistiveTechnologyFocusedIdentifiers;
-(NSString *)accessibilityLabel;
-(CGRect)accessibilityFrame;
-(id)storedAccessibilityViewIsModal;
-(id)storedAccessibilityElementsHidden;
-(id)storedShouldGroupAccessibilityChildren;
-(id)storedAccessibilityNavigationStyle;
-(NSString *)accessibilityValue;
-(NSString *)accessibilityHint;
-(CGPoint)accessibilityActivationPoint;
-(unsigned long long)accessibilityTraits;
-(BOOL)isAccessibilityElement;
-(id)accessibilityContainer;
-(NSString *)accessibilityLanguage;
-(UIBezierPath *)accessibilityPath;
-(BOOL)accessibilityViewIsModal;
-(BOOL)accessibilityElementsHidden;
-(BOOL)shouldGroupAccessibilityChildren;
-(long long)accessibilityNavigationStyle;
-(id)storedAccessibilityTraits;
-(id)storedIsAccessibilityElement;
-(id)storedAccessibilityFrame;
-(id)storedAccessibilityActivationPoint;
-(NSArray *)accessibilityHeaderElements;
-(void)setAccessibilityElementsHidden:(BOOL)arg1 ;
-(void)setAccessibilityViewIsModal:(BOOL)arg1 ;
-(void)setAccessibilityLabel:(NSString *)arg1 ;
-(void)setAccessibilityValue:(NSString *)arg1 ;
-(void)setAccessibilityHint:(NSString *)arg1 ;
-(void)setAccessibilityFrame:(CGRect)arg1 ;
-(void)setAccessibilityPath:(UIBezierPath *)arg1 ;
-(void)setAccessibilityActivationPoint:(CGPoint)arg1 ;
-(void)setAccessibilityTraits:(unsigned long long)arg1 ;
-(void)setIsAccessibilityElement:(BOOL)arg1 ;
-(void)setAccessibilityContainer:(id)arg1 ;
-(void)setAccessibilityLanguage:(NSString *)arg1 ;
-(void)setShouldGroupAccessibilityChildren:(BOOL)arg1 ;
-(void)setAccessibilityNavigationStyle:(long long)arg1 ;
-(void)setAccessibilityHeaderElements:(NSArray *)arg1 ;
-(void)awakeFromNib;
-(void)prepareForInterfaceBuilder;
-(void)_connectInterfaceBuilderEventConnection:(id)arg1 ;
-(void)_applyTraitStorageRecordsForTraitCollection:(id)arg1 ;
-(void)_setTraitStorageList:(id)arg1 ;
-(id)_traitStorageList;
-(id)__ivarDescriptionForClass:(Class)arg1 ;
-(id)__methodDescriptionForClass:(Class)arg1 ;
-(id)_ivarDescription;
-(id)_methodDescription;
-(id)_shortMethodDescription;
-(id)_webkit_invokeOnMainThread;
-(void)releaseOnMainThread;
-(id)__im_afterDelay:(double)arg1 ;
-(id)__im_afterDelay:(double)arg1 modes:(id)arg2 ;
-(id)__im_onThread:(id)arg1 ;
-(id)__im_onThread:(id)arg1 immediateForMatchingThread:(BOOL)arg2 ;
-(id)__im_onMainThread;
-(id)__im_onMainThreadIfNecessary;
-(id)__im_onDetachedThread;
-(id)__im_getInvocation:(id*)arg1 ;
-(void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 ignoreMenuTracking:(BOOL)arg4 ;
-(BOOL)isNull;
-(id)ax_prettyDescription;
-(void)_ax_appendPrettyDescriptionToString:(id)arg1 indentationString:(id)arg2 visitedCollections:(id)arg3 ;
-(id)axTrampolineForClass:(Class)arg1 ;
-(id)axSuperTrampoline;
-(BOOL)_accessibilityIsSpeakThisTemporarilyDisabled;
-(void)_accessibilitySetSpeakThisTemporarilyDisabled:(BOOL)arg1 ;
-(double)safeDoubleForKey:(id)arg1 ;
-(id)__axValueForKey:(id)arg1 ;
-(void)_accessibilityPerformSafeValueKeyBlock:(/*^block*/id)arg1 withKey:(id)arg2 onClass:(Class)arg3 ;
-(void*)safeIvarForKey:(id)arg1 ;
-(BOOL)safeBoolForKey:(id)arg1 ;
-(int)safeIntForKey:(id)arg1 ;
-(unsigned)safeUnsignedIntForKey:(id)arg1 ;
-(long long)safeIntegerForKey:(id)arg1 ;
-(unsigned long long)safeUnsignedIntegerForKey:(id)arg1 ;
-(float)safeFloatForKey:(id)arg1 ;
-(double)safeTimeIntervalForKey:(id)arg1 ;
-(NSRange)safeRangeForKey:(id)arg1 ;
-(double)safeCGFloatForKey:(id)arg1 ;
-(id)safeValueForKeyPath:(id)arg1 ;
-(long long)safeIntegerForIvarKey:(id)arg1 onClass:(Class)arg2 ;
-(void)handleFailoversForClassNamed:(id)arg1 ;
-(id)safeValueForKey:(id)arg1 ;
-(id)_safeValidatedValueForKey:(id)arg1 expectedClass:(Class)arg2 possibleExpectedTypeEncodings:(const char*)arg3 ;
-(id)_safeValidatedValueForKey:(id)arg1 expectedClass:(Class)arg2 expectedTypeEncoding:(const char*)arg3 ;
-(id)_accessibilityValueForKey:(id)arg1 ;
-(void)_accessibilitySetValue:(id)arg1 forKey:(id)arg2 storageMode:(int)arg3 ;
-(void)_accessibilitySetRetainedValue:(id)arg1 forKey:(id)arg2 ;
-(BOOL)_accessibilityBoolValueForKey:(id)arg1 ;
-(long long)_accessibilityIntegerValueForKey:(id)arg1 ;
-(unsigned long long)_accessibilityUnsignedIntegerValueForKey:(id)arg1 ;
-(void)_accessibilitySetAssignedValue:(id)arg1 forKey:(id)arg2 ;
-(void)_accessibilitySetBoolValue:(BOOL)arg1 forKey:(id)arg2 ;
-(void)_accessibilitySetIntegerValue:(long long)arg1 forKey:(id)arg2 ;
-(void)_accessibilitySetUnsignedIntegerValue:(unsigned long long)arg1 forKey:(id)arg2 ;
-(void)_accessibilityRemoveValueForKey:(id)arg1 ;
-(void)postNotificationWithDescription:(id)arg1 ;
-(BOOL)okToNotifyFromThisThread;
-(void)fromNotifySafeThreadPerformSelector:(SEL)arg1 withObject:(id)arg2 ;
-(void)allowSafePerformSelector;
-(void)disallowSafePerformSelector;
-(void)fromNotifySafeThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 ;
-(void)fromMainThreadPostNotificationName:(id)arg1 object:(id)arg2 userInfo:(id)arg3 ;
-(id)threadDescription;
-(id)performSelector:(SEL)arg1 withObjectsAsArray:(id)arg2 ;
-(void)_scr_safeGetValueForKeyPath:(id)arg1 lock:(id)arg2 ;
-(void)_scr_safeGetValueForKeyPath:(id)arg1 ;
-(id)_getRetainedValueForKeyPathOnMainThread:(id)arg1 copy:(BOOL)arg2 ;
-(double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 waitTime:(double)arg3 cancelMask:(unsigned)arg4 count:(unsigned)arg5 objects:(id)arg6 ;
-(id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 ;
-(id)_getRetainedValueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 copy:(BOOL)arg4 ;
-(id)copyValueForKeyPath:(id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 ;
-(void)_scr_safeGetValueForSelector:(id)arg1 lock:(id)arg2 ;
-(void)_scr_safeGetValueForBlock:(id)arg1 lock:(id)arg2 ;
-(double)performSelector:(SEL)arg1 withThreadKey:(id)arg2 count:(unsigned)arg3 objects:(id)arg4 ;
-(id)valueForKeyPathOnMainThread:(id)arg1 ;
-(id)copyValueForKeyPathOnMainThread:(id)arg1 ;
-(id)valueForKeyPath:(id)arg1 forThreadKey:(id)arg2 ;
-(id)copyValueForKeyPath:(id)arg1 forThreadKey:(id)arg2 ;
-(id)valueForSelector:(SEL)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 copyValue:(BOOL)arg4 withObjects:(id)arg5 ;
-(id)valueForBlock:(/*^block*/id)arg1 forThreadKey:(id)arg2 waitTime:(double)arg3 ;
-(void)cl_json_serializeValue:(value_ostream*)arg1 ;
-(id)cl_json_serializeKey;
-(BOOL)sbs_isPlistableType;
-(void)encodeWithCAMLWriter:(id)arg1 ;
-(id)CAMLTypeForKey:(id)arg1 ;
-(id)CAMLType;
-(id)CA_roundToIntegerFromValue:(id)arg1 ;
-(id)CA_interpolateValues:(id)arg1 :(id)arg2 :(id)arg3 interpolator:(const ValueInterpolator*)arg4 ;
-(id)CA_addValue:(id)arg1 multipliedBy:(int)arg2 ;
-(double)CA_distanceToValue:(id)arg1 ;
-(id)CA_interpolateValue:(id)arg1 byFraction:(float)arg2 ;
-(Object*)CA_copyRenderValue;
-(void)CA_prepareRenderValue;
-(BOOL)bs_isPlistableType;
-(id)bs_encoded;
-(id)bs_secureEncoded;
-(BOOL)bs_performSynchronously:(/*^block*/id)arg1 ;
-(BOOL)bs_performSynchronously:(/*^block*/id)arg1 timeout:(double)arg2 ;
-(id)pep_getInvocation:(id*)arg1 ;
-(id)pep_afterDelay:(double)arg1 ;
-(id)pep_onMainThreadIfNecessary;
-(id)pep_onMainThread;
-(id)pep_onThread:(id)arg1 ;
-(id)pep_onThread:(id)arg1 immediateForMatchingThread:(BOOL)arg2 ;
-(id)pep_onOperationQueue:(id)arg1 priority:(long long)arg2 ;
-(id)pep_onDetachedThread;
-(id)pep_onOperationQueue:(id)arg1 ;
-(BOOL)_isToManyChangeInformation;
-(void)_receiveBox:(id)arg1 ;
-(id*)_observerStorage;
-(id)addChainedObservers:(id)arg1 ;
-(id)addObservationTransformer:(/*^block*/id)arg1 ;
-(id)addObserver:(id)arg1 ;
-(void)receiveObservedValue:(id)arg1 ;
-(id)addObserverBlock:(/*^block*/id)arg1 ;
-(void)receiveObservedError:(id)arg1 ;
-(void)finishObserving;
-(void)removeObservation:(id)arg1 ;
-(Class)classForPortCoder;
-(id)replacementObjectForPortCoder:(id)arg1 ;
-(id)addObserver:(id)arg1 forObservableKeyPath:(id)arg2 ;
-(void)setObservation:(id)arg1 forObservingKeyPath:(id)arg2 ;
-(void)removeObservation:(id)arg1 forObservableKeyPath:(id)arg2 ;
-(void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 modes:(id)arg5 ;
-(void)performSelectorInBackground:(SEL)arg1 withObject:(id)arg2 ;
-(void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 modes:(id)arg4 ;
-(void)performSelectorOnMainThread:(SEL)arg1 withObject:(id)arg2 waitUntilDone:(BOOL)arg3 ;
-(void)performSelector:(SEL)arg1 onThread:(id)arg2 withObject:(id)arg3 waitUntilDone:(BOOL)arg4 ;
-(void)performSelector:(SEL)arg1 object:(id)arg2 afterDelay:(double)arg3 ;
-(void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 ;
-(void)performSelector:(SEL)arg1 withObject:(id)arg2 afterDelay:(double)arg3 inModes:(id)arg4 ;
-(id)autoContentAccessingProxy;
-(id)replacementObjectForCoder:(id)arg1 ;
-(BOOL)_allowsDirectEncoding;
-(BOOL)implementsSelector:(SEL)arg1 ;
-(Class)classForCoder;
-(id)awakeAfterUsingCoder:(id)arg1 ;
-(Class)classForKeyedArchiver;
-(id)replacementObjectForKeyedArchiver:(id)arg1 ;
-(id)_pendingChangeNotificationsArrayForKey:(id)arg1 create:(BOOL)arg2 ;
-(void)_changeValueForKey:(id)arg1 key:(id)arg2 key:(id)arg3 usingBlock:(/*^block*/id)arg4 ;
-(id)_implicitObservationInfo;
-(void)_notifyObserversForKeyPath:(id)arg1 change:(id)arg2 ;
-(void)_willChangeValuesForKeys:(id)arg1 ;
-(void)_didChangeValuesForKeys:(id)arg1 ;
-(void)_changeValueForKey:(id)arg1 usingBlock:(/*^block*/id)arg2 ;
-(void)setObservationInfo:(void*)arg1 ;
-(void*)observationInfo;
-(void)willChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3 ;
-(void)didChangeValueForKey:(id)arg1 withSetMutation:(unsigned long long)arg2 usingObjects:(id)arg3 ;
-(void)willChangeValueForKey:(id)arg1 ;
-(void)didChangeValueForKey:(id)arg1 ;
-(void)willChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3 ;
-(void)didChange:(unsigned long long)arg1 valuesAtIndexes:(id)arg2 forKey:(id)arg3 ;
-(void)_addObserver:(id)arg1 forProperty:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(void)_removeObserver:(id)arg1 forProperty:(id)arg2 ;
-(void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 context:(void*)arg3 ;
-(void)removeObserver:(id)arg1 forKeyPath:(id)arg2 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(BOOL)_isKVOA;
-(BOOL)validateValue:(inout id*)arg1 forKeyPath:(id)arg2 error:(out id*)arg3 ;
-(BOOL)validateValue:(inout id*)arg1 forKey:(id)arg2 error:(out id*)arg3 ;
-(id)mutableArrayValueForKey:(id)arg1 ;
-(id)mutableOrderedSetValueForKeyPath:(id)arg1 ;
-(id)mutableSetValueForKeyPath:(id)arg1 ;
-(id)valueForKey:(id)arg1 ;
-(void)setValue:(id)arg1 forKey:(id)arg2 ;
-(id)valueForKeyPath:(id)arg1 ;
-(void)setValue:(id)arg1 forKeyPath:(id)arg2 ;
-(void)setValuesForKeysWithDictionary:(id)arg1 ;
-(id)valueForUndefinedKey:(id)arg1 ;
-(id)dictionaryWithValuesForKeys:(id)arg1 ;
-(id)mutableArrayValueForKeyPath:(id)arg1 ;
-(void)setNilValueForKey:(id)arg1 ;
-(id)mutableOrderedSetValueForKey:(id)arg1 ;
-(id)mutableSetValueForKey:(id)arg1 ;
-(void)setValue:(id)arg1 forUndefinedKey:(id)arg2 ;
-(id)replacementObjectForArchiver:(id)arg1 ;
-(Class)classForArchiver;
-(unsigned long long)_cfTypeID;
-(BOOL)isNSTimeZone__;
-(BOOL)isNSDate__;
-(BOOL)isNSSet__;
-(BOOL)isNSValue__;
-(BOOL)isNSOrderedSet__;
-(BOOL)isNSDictionary__;
-(BOOL)isNSArray__;
-(BOOL)isNSString__;
-(BOOL)isNSNumber__;
-(BOOL)isNSData__;
-(void)__dealloc_zombie;
-(id)__retain_OA;
-(oneway void)__release_OA;
-(id)__autorelease_OA;
-(BOOL)___tryRetain_OA;
-(id)_copyDescription;
-(NSString *)description;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(void)doesNotRecognizeSelector:(SEL)arg1 ;
-(BOOL)isFault;
-(Class)class;
-(void)dealloc;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(id)init;
-(BOOL)isKindOfClass:(Class)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(id)self;
-(id)performSelector:(SEL)arg1 ;
-(id)performSelector:(SEL)arg1 withObject:(id)arg2 ;
-(id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3 ;
-(BOOL)isProxy;
-(BOOL)isMemberOfClass:(Class)arg1 ;
-(BOOL)conformsToProtocol:(id)arg1 ;
-(id)retain;
-(oneway void)release;
-(id)autorelease;
-(unsigned long long)retainCount;
-(NSZone*)zone;
-(unsigned long long)hash;
-(Class)superclass;
-(NSString *)description;
-(NSString *)debugDescription;
-(id)copy;
-(/*function pointer*/void*)methodForSelector:(SEL)arg1 ;
-(id)methodSignatureForSelector:(SEL)arg1 ;
-(id)mutableCopy;
-(void)doesNotRecognizeSelector:(SEL)arg1 ;
-(BOOL)_isDeallocating;
-(BOOL)allowsWeakReference;
-(id)forwardingTargetForSelector:(SEL)arg1 ;
-(void)forwardInvocation:(id)arg1 ;
-(BOOL)retainWeakReference;
-(BOOL)_tryRetain;
-(void)finalize;
@end

